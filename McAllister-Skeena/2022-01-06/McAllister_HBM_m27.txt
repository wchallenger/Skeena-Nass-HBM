# No HBM January 1, 2022
# Model estimates slope, intercept and se by stock
# Uses all data points
# lognormal prior for intercept and lognormal for slope
# Maximum cutoff for Smax based on 5x prior mean
# Korman and English prior on tau, hyperpriors on intercept
# Uniform prior on sigma in likelihood - corrected from K+E 2013
# Hierarchical on Ricker a only, lognormal prior on Ricker b
# Not Hierarchical on sigma in likelihood
# computes msy reference points
# NO Common shared year effect
model{ 
  #
  for (i in 1:ndata){ # loop over all observations all stocks 
      lnRSobs[i] ~ dnorm(lnRS[i], tau[CU[i]]) # calc. prob of ea. data pt 
      lnRS[i] <- intercept[CU[i]] - slope[CU[i]] * Spawn[i] #+ TE[year[i]] 
     # predict ea. obs. lnRS
   }
  #SET PRIORS for parameters for each stock
  for (i in 1:Nstocks) {
     ms[i]<- log(1/prSmax[i]) #prior median on Ricker b
     msmin[i] <- 1/ Smaxmax[i] #prior minimum on Ricker b
    # prior precision on Ricker b
    taus[i] <- 1/(prCV[i]*prCV[i]) 
  # step function: prob =1 if intercept >= 0 
     proba[i] <- step(intercept[i]) 
     probb[i] <-step(slope[i]) # prob =1 if slope < 0 for Ricker function
  # prior density function for the Ricker b parameter
     slope[i] ~ dlnorm(ms[i],taus[i])  I(msmin[i], )
     slopex[i] ~ dlnorm(ms[i],taus[i]) I(msmin[i], )
  # save prior dens. func. for the slope 
  intercept[i] ~ dlnorm(0.5,1) # prior on Ricker a parameter
  interceptx[i] ~ dlnorm(0.5,1)
  Smax[i] <- 1/slope[i] #calculate Smax from the Ricker b
       se[i]~dunif(0.05,10)  #prior on likelihood function sigma
      tau[i]<-pow(se[i],-2)	#computation of tau corrected from K+E
     CC[i] <- intercept[i]/slope[i]  # compute intercept by stock
     Smsy[i] <- CC[i]*(0.5-0.07*intercept[i])   #compute Smsy by stock
     Rmsy[i] <- Smsy[i]*exp(intercept[i]-slope[i]*Smsy[i])
     msy[i]<- Rmsy[i]-Smsy[i]
     Umsy[i] <- msy[i]/Rmsy[i]
  #   Umsy[i] <- 0.5*intercept[i] *(1 - 0.07*intercept[i]) #Umsy by stock
  }
  SumSmsy<-sum(Smsy[1:Nstocks]) #sum of Smsy across stocks
  slopemn <- mean(slope[1:Nstocks])
  interceptmn<-mean(intercept[1:Nstocks])

}